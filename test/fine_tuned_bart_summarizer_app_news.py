import streamlit as st
from transformers import BartTokenizer, BartForConditionalGeneration

# Load the fine-tuned model and tokenizer
model = BartForConditionalGeneration.from_pretrained('models/fine_tuned_bart')
tokenizer = BartTokenizer.from_pretrained('models/fine_tuned_bart')

# Function to generate summary
def summarize(text):
    # Tokenize the input text
    inputs = tokenizer(text, return_tensors="pt", max_length=1024, truncation=True, padding=True)
    
    # Generate the summary
    summary_ids = model.generate(inputs['input_ids'], max_length=150, min_length=30, length_penalty=2.0, num_beams=4, early_stopping=True)
    
    # Decode the summary back to text
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    
    return summary

# Streamlit UI
st.title("BART Extractive Summarization")

st.write("""
This application allows you to input a text and get a summary generated by a fine-tuned BART model.
""")

# Text input for the article
input_text = st.text_area("Enter text to summarize:")

if st.button("Generate Summary"):
    if input_text.strip() != "":
        summary = summarize(input_text)
        st.subheader("Generated Summary:")
        st.write(summary)
    else:
        st.warning("Please enter some text to summarize.")
